package com.poo.main;

import java.awt.Dimension;
import java.awt.Graphics;
import java.awt.Graphics2D;
import java.awt.event.KeyEvent;
import java.awt.event.KeyListener;
import java.awt.image.BufferedImage;

import javax.swing.JPanel;

import com.poo.gameStates.GameStateManager;

public class GamePanel extends JPanel implements Runnable, KeyListener {
	
	public static final int ANCHO = 1280;
	public static final int ALTO = 720;
	
	private Thread thread;
	private boolean ejecutando;
	private int FPS = 60;
	private long targetTime = 1000 / 60;
	
	private BufferedImage imagen;
	private Graphics2D g;
	
	private GameStateManager manager;
	
	public GamePanel() {
		setPreferredSize(new Dimension(ANCHO, ALTO));
		setFocusable(true);
		
	}
	
	public void addNotify() {
		super.notify();
		if(thread == null) {
			thread = new Thread(this);
			addKeyListener(this);
			thread.start();
		}
	}
	
	private void init() {
		imagen = new BufferedImage(ANCHO, ALTO, BufferedImage.TYPE_INT_RGB);
		g = (Graphics2D) g;
		ejecutando = true;
		
		manager = new GameStateManager();
	}
	
	public void run() {
		
		init();
		long start;
		long elapsed;
		long wait;
		
		while(ejecutando) {
			
			start = System.nanoTime();
						
			update();
			draw();
			drawToScreen();
			
			elapsed = System.nanoTime() - start;
			wait = targetTime - elapsed / 1000000;
			
			try {
				Thread.sleep(wait);
			} catch(Exception e) {
				e.printStackTrace();
			}
		}
	}
	
	private void update() {
		manager.update();
	}
	
	private void draw() {
		manager.draw(g);
	}
	
	private void drawToScreen() {
		Graphics g2 = getGraphics();
		g2.drawImage(imagen, 0 ,0 , null);
		g2.dispose();
	}
	
	public void keyTyped(KeyEvent key) {
		
	}
	
	public void keyPressed(KeyEvent key) {
		manager.keyPressed(key.getKeyCode());
	}

	public void keyReleased(KeyEvent key) {
		manager.keyReleased(key.getKeyCode());
	}
	
	
	
	
}
